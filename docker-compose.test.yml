include:
  - path: ./auth-service/docker-compose.yml
  - path: ./user-service/docker-compose.yml
services:
  rabbitmq:
    image: rabbitmq:4.1.0-rc.2-management
    container_name: rabbitmq-test
    restart: always
    env_file:
      - ./.env
    ports:
      - "${RABBITMQ_MANAGEMENT_PORT}:15672" # RabbitMQ Management UI
      - "${RABBITMQ_PORT}:5672"   # RabbitMQ AMQP protocol
    volumes:
      - rabbitmq_test_data:/var/lib/rabbitmq
    networks:
      - microservice-network
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # Auth service test runner
  auth-service-test:
    container_name: auth-service-test
    build:
      context: ./auth-service
      dockerfile: docker/Dockerfile.test
    env_file:
      - .env
      - ./auth-service/.env
    environment:
      AUTH_POSTGRES_EXTERNAL_PORT: ${AUTH_POSTGRES_EXTERNAL_PORT:-5433}
      AUTH_POSTGRES_INTERNAL_PORT: ${AUTH_POSTGRES_INTERNAL_PORT:-5432}
      AUTH_SERVICE_EXTERNAL_PORT: ${AUTH_SERVICE_EXTERNAL_PORT:-8080}
      AUTH_SERVICE_INTERNAL_PORT: ${AUTH_SERVICE_INTERNAL_PORT:-8080}
      AUTH_REDIS_EXTERNAL_PORT: ${AUTH_REDIS_EXTERNAL_PORT:-6379}
      ALGORITHM: ${ALGORITHM:-RS256}
      PRIVATE_KEY_PATH: keys/private.pem
      PUBLIC_KEY_PATH: keys/public.pem
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS}
    profiles:
      - test

  # User service test runner
  user-service-test:
    container_name: user-service-test
    build:
      context: ./user-service
      dockerfile: docker/Dockerfile
    env_file:
      - .env
      - ./user-service/.env
    environment:
      USER_SERVICE_EXTERNAL_PORT: ${USER_SERVICE_EXTERNAL_PORT}
      USER_SERVICE_INTERNAL_PORT: ${USER_SERVICE_INTERNAL_PORT}
      USER_POSTGRES_EXTERNAL_PORT: ${USER_POSTGRES_EXTERNAL_PORT}
      USER_POSTGRES_INTERNAL_PORT: ${USER_POSTGRES_INTERNAL_PORT}
    volumes:
      - ./user-service/app:/workdir/app
      - ./user-service/tests:/workdir/tests
      - ./user-service/conftest.py:/workdir/conftest.py
    working_dir: /workdir
    command: python -m pytest tests/ -v
    networks:
      - user-network
      - microservice-network
    profiles:
      - test

# ボリュームの定義
volumes:
  rabbitmq_test_data:

# 共通ネットワークの定義
networks:
  microservice-network:
    name: "${COMMON_NETWORK:-microservice-network}"
    driver: bridge
  auth-network:
    name: auth-network
    driver: bridge
  user-network:
    name: user-network
    driver: bridge